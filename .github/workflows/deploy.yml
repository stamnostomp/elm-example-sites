name: Deploy Elm Application

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Elm directly (fallback)
        if: always()
        run: |
          # Create dist directory
          mkdir -p dist

          # Copy static files
          cp -r public/* dist/

          # Install Elm
          npm install -g elm

          # Compile the Elm application directly
          elm make src/Main.elm --optimize --output=dist/elm.js

          # List files to verify
          ls -la dist/

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
